# Control Center Configuration
confluent.controlcenter.rest.listeners={{control_center_http_protocol}}://{{control_center_listener_hostname}}:{{control_center_port}}
{% if control_center_ssl_enabled|bool %}
confluent.controlcenter.rest.ssl.keystore.location={{control_center_keystore_path}}
confluent.controlcenter.rest.ssl.keystore.password={{control_center_keystore_storepass}}
confluent.controlcenter.rest.ssl.key.password={{control_center_keystore_keypass}}
{% if control_center_ssl_mutual_auth_enabled|bool %}
confluent.controlcenter.rest.ssl.truststore.location={{control_center_truststore_path}}
confluent.controlcenter.rest.ssl.truststore.password={{control_center_truststore_storepass}}
{% endif %}
{% endif %}

{% set cfg = control_center.properties %}
{% for key, value in cfg.items() %}
{{key}}={{value}}
{% endfor %}

# Kafka Brokers
bootstrap.servers={% for host in groups['kafka_broker'] %}{% if loop.index > 1%},{% endif %}{{ host }}:{{kafka_broker_listeners[control_center_kafka_listener_name]['port']}}{% endfor %}

{% set config_prefix = 'confluent.controlcenter.streams.' %}
{% set listener = kafka_broker_listeners[control_center_kafka_listener_name] %}
{% set truststore_path = control_center_truststore_path %}
{% set truststore_storepass = control_center_truststore_storepass %}
{% set keystore_path = control_center_keystore_path %}
{% set keystore_storepass = control_center_keystore_storepass %}
{% set keystore_keypass = control_center_keystore_keypass %}
{% set sasl_plain_username = sasl_plain_users.control_center.principal %}
{% set sasl_plain_password = sasl_plain_users.control_center.password %}
{% set sasl_scram_username = sasl_scram_users.control_center.principal %}
{% set sasl_scram_password = sasl_scram_users.control_center.password %}
{% set kerberos_keytab_path = control_center_kerberos_keytab_path %}
{% set kerberos_principal = control_center_kerberos_principal %}
{% set oauth_username = control_center_ldap_user %}
{% set oauth_password = control_center_ldap_password %}
{% include 'roles/confluent.kafka_broker/templates/kafka_client.j2' %}

{% set schema_registries = groups.get('schema_registry', []) %}
{% if schema_registries %}
# Schema Registry Configuration
confluent.controlcenter.schema.registry.url={% for host in groups['schema_registry'] %}{% if loop.index > 1%},{% endif %}{{ schema_registry_http_protocol }}://{{ host }}:{{ schema_registry_listener_port }}{% endfor %}

{% if schema_registry_ssl_enabled|bool %}
confluent.controlcenter.schema.registry.ssl.truststore.location={{control_center_truststore_path}}
confluent.controlcenter.schema.registry.ssl.truststore.password={{control_center_truststore_storepass}}
confluent.controlcenter.schema.registry.ssl.keystore.location={{control_center_keystore_path}}
confluent.controlcenter.schema.registry.ssl.keystore.password={{control_center_keystore_storepass}}
confluent.controlcenter.schema.registry.ssl.key.password={{control_center_keystore_keypass}}
{% endif %}
{% endif %}

{% set connect_servers = groups.get('kafka_connect', []) %}
{% if connect_servers %}
# Kafka Connect Configuration
{% if kafka_connect_cluster_ansible_group_names is defined %}
{% for ansible_group in kafka_connect_cluster_ansible_group_names %}
{% for host in groups[ansible_group] %}{% if loop.index == 1%}confluent.controlcenter.connect.{{ hostvars[host]['kafka_connect_group_id'] }}.cluster={% endif %}{% if loop.index > 1%},{% endif %}{{ kafka_connect_http_protocol }}://{{ host }}:{{ kafka_connect_rest_port }}{% endfor %}

{% if kafka_connect_ssl_enabled|bool | bool %}
confluent.controlcenter.connect.{{ hostvars[groups[ansible_group][0]]['kafka_connect_group_id'] }}.ssl.truststore.location={{control_center_truststore_path}}
confluent.controlcenter.connect.{{ hostvars[groups[ansible_group][0]]['kafka_connect_group_id'] }}.ssl.truststore.password={{control_center_truststore_storepass}}
confluent.controlcenter.connect.{{ hostvars[groups[ansible_group][0]]['kafka_connect_group_id'] }}.ssl.keystore.location={{control_center_keystore_path}}
confluent.controlcenter.connect.{{ hostvars[groups[ansible_group][0]]['kafka_connect_group_id'] }}.ssl.keystore.password={{control_center_keystore_storepass}}
confluent.controlcenter.connect.{{ hostvars[groups[ansible_group][0]]['kafka_connect_group_id'] }}.ssl.key.password={{control_center_keystore_keypass}}
{% endif %}

{% endfor %}
{% else %}
confluent.controlcenter.connect.default.cluster={% for host in groups['kafka_connect'] %}{% if loop.index > 1%},{% endif %}{{ kafka_connect_http_protocol }}://{{ host }}:{{ kafka_connect_rest_port }}{% endfor %}

{% if kafka_connect_ssl_enabled|bool %}
confluent.controlcenter.connect.default.ssl.truststore.location={{control_center_truststore_path}}
confluent.controlcenter.connect.default.ssl.truststore.password={{control_center_truststore_storepass}}
confluent.controlcenter.connect.default.ssl.keystore.location={{control_center_keystore_path}}
confluent.controlcenter.connect.default.ssl.keystore.password={{control_center_keystore_storepass}}
confluent.controlcenter.connect.default.ssl.key.password={{control_center_keystore_keypass}}
{% endif %}
{% endif %}
{% endif %}

{% set ksql_servers = groups.get('ksql', []) %}
{% if ksql_servers and cfg.get('confluent.controlcenter.ksql.enable', 'false').lower() == 'true' %}
# KSQL Configuration
{% if ksql_cluster_ansible_group_names is defined %}
{% for ansible_group in ksql_cluster_ansible_group_names %}
{% for host in groups[ansible_group] %}{% if loop.index == 1%}confluent.controlcenter.ksql.{{ ansible_group }}.url={% endif %}{% if loop.index > 1%},{% endif %}{{ ksql_http_protocol }}://{{ host }}:{{ ksql_listener_port }}{% endfor %}

{% if ksql_ssl_enabled|bool | bool %}
confluent.controlcenter.ksql.{{ ansible_group }}.ssl.truststore.location={{control_center_truststore_path}}
confluent.controlcenter.ksql.{{ ansible_group }}.ssl.truststore.password={{control_center_truststore_storepass}}
confluent.controlcenter.ksql.{{ ansible_group }}.ssl.keystore.location={{control_center_keystore_path}}
confluent.controlcenter.ksql.{{ ansible_group }}.ssl.keystore.password={{control_center_keystore_storepass}}
confluent.controlcenter.ksql.{{ ansible_group }}.ssl.key.password={{control_center_keystore_keypass}}
{% endif %}

{% endfor %}
{% else %}
confluent.controlcenter.ksql.default.url={% for host in groups['ksql'] %}{% if loop.index > 1%},{% endif %}{{ ksql_http_protocol }}://{{ host }}:{{ ksql_listener_port }}{% endfor %}

{% if ksql_ssl_enabled|bool %}
confluent.controlcenter.ksql.default.ssl.truststore.location={{control_center_truststore_path}}
confluent.controlcenter.ksql.default.ssl.truststore.password={{control_center_truststore_storepass}}
confluent.controlcenter.ksql.default.ssl.keystore.location={{control_center_keystore_path}}
confluent.controlcenter.ksql.default.ssl.keystore.password={{control_center_keystore_storepass}}
confluent.controlcenter.ksql.default.ssl.key.password={{control_center_keystore_keypass}}
{% endif %}
{% endif %}
{% endif %}

{% if rbac_enabled|bool %}
# RBAC Configuration
confluent.controlcenter.rest.authentication.method=BEARER
public.key.path={{rbac_enabled_public_pem_path}}

confluent.metadata.bootstrap.server.urls={% for host in groups['kafka_broker'] %}{% if loop.index > 1%},{% endif %}{{mds_http_protocol}}://{{ host }}:{{mds_port}}{% endfor %}

confluent.metadata.basic.auth.user.info={{control_center_ldap_user}}:{{control_center_ldap_password}}
{% endif %}
