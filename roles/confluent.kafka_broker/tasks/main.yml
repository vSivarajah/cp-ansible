---
- include_role:
    name: confluent.common
  when: not common_role_completed|bool

- name: Install the Kafka Broker Packages
  yum:
    name: "{{item}}{{confluent_package_redhat_suffix}}"
    state: latest
  loop: "{{kafka_broker_packages}}"
  when: ansible_os_family == "RedHat"

- name: Install the Kafka Broker Packages
  apt:
    name: "{{item}}{{confluent_package_debian_suffix}}"
  loop: "{{kafka_broker_packages}}"
  when: ansible_os_family == "Debian"

- name: Kafka Broker group
  group:
    name: "{{kafka_broker_group}}"

- name: Kafka Broker user
  user:
    name: "{{kafka_broker_user}}"
    comment: "Kafka User"
    system: true
    group: "{{kafka_broker_group}}"

- include_role:
    name: confluent.ssl
  vars:
    truststore_storepass: "{{kafka_broker_truststore_storepass}}"
    truststore_path: "{{kafka_broker_truststore_path}}"
    keystore_path: "{{kafka_broker_keystore_path}}"
    keystore_storepass: "{{kafka_broker_keystore_storepass}}"
    keystore_keypass: "{{kafka_broker_keystore_keypass}}"
    service_name: kafka_broker
    hostnames: "{{ [ansible_fqdn] + kafka_broker_listeners | get_hostnames(inventory_hostname) | unique }}"
    ca_cert_path: "{{kafka_broker_ca_cert_path}}"
    cert_path: "{{kafka_broker_cert_path}}"
    key_path: "{{kafka_broker_key_path}}"
  when: kafka_broker_listeners | ssl_required(ssl_enabled) or zookeeper_ssl_enabled|bool

- include_tasks: rbac.yml
  when: rbac_enabled|bool

- name: Configure Kerberos
  include_role:
    name: confluent.kerberos
  vars:
    kerberos_group: "{{kafka_broker_group}}"
    kerberos_user: "{{kafka_broker_user}}"
    kerberos_keytab_path: "{{kafka_broker_kerberos_keytab_path}}"
    kerberos_handler: "Restart Kafka"
  when: "'GSSAPI' in kafka_broker_sasl_enabled_mechanisms or zookeeper_sasl_protocol == 'kerberos'"

- name: Set Permissions on /var/lib/kafka
  file:
    path: /var/lib/kafka/
    owner: "{{kafka_broker_user}}"
    group: "{{kafka_broker_group}}"
    state: directory
    mode: 0750

- name: Set Permissions on Data Dirs
  file:
    path: "{{item}}"
    owner: "{{kafka_broker_user}}"
    group: "{{kafka_broker_group}}"
    state: directory
    mode: 0750
  with_items: "{{kafka_broker.datadir}}"

- name: Set Permissions on Data Dir files
  file:
    path: "{{item}}"
    owner: "{{kafka_broker_user}}"
    group: "{{kafka_broker_group}}"
    recurse: true
  with_items: "{{kafka_broker.datadir}}"

- name: Create Kafka Broker Config
  template:
    src: server.properties.j2
    dest: "{{kafka_broker.config_file}}"
    mode: 0640
    owner: "{{kafka_broker_user}}"
    group: "{{kafka_broker_group}}"
  notify:
    - Restart Kafka

- name: Create Logs Directory
  file:
    path: "{{kafka_broker.appender_log_path}}"
    state: directory
    group: "{{kafka_broker_group}}"
    owner: "{{kafka_broker_user}}"
    mode: '764'

- name: Create Kafka Broker log4j Config
  template:
    src: kafka_server_log4j.properties.j2
    dest: "{{kafka_broker.log4j_file}}"
    mode: 0640
    owner: "{{kafka_broker_user}}"
    group: "{{kafka_broker_group}}"
  notify:
    - Restart Kafka

- name: Create Kafka Broker Jaas Config
  template:
    src: kafka_server_jaas.conf.j2
    dest: "{{kafka_broker.jaas_file}}"
    mode: 0640
    owner: "{{kafka_broker_user}}"
    group: "{{kafka_broker_group}}"
  when: "'GSSAPI' in kafka_broker_sasl_enabled_mechanisms or zookeeper_sasl_protocol in ['kerberos', 'digest']"
  notify:
    - Restart Kafka

- name: Create SCRAM Users
  shell: |
    kafka-configs --zookeeper localhost:{{zookeeper.properties.clientPort}} --alter \
      --add-config 'SCRAM-SHA-256=[password={{ item.value['password'] }}]' \
      --entity-type users --entity-name {{ item.value['principal'] }}
  loop: "{{ sasl_scram_users|dict2items }}"
  delegate_to: "{{ groups['zookeeper'][0] }}"
  run_once: true
  when: "'SCRAM-SHA-256' in kafka_broker_sasl_enabled_mechanisms"

- name: Deploy JMX Exporter Config File
  copy:
    src: "kafka.yml"
    dest: "{{kafka_broker_jmxexporter_config_path}}"
    mode: 0640
    owner: "{{kafka_broker_user}}"
    group: "{{kafka_broker_group}}"
  when: jmxexporter_enabled|bool

- name: Create Service Override Directory
  file:
    path: "{{kafka_broker.systemd_override | dirname }}"
    owner: "{{kafka_broker_user}}"
    group: "{{kafka_broker_group}}"
    state: directory
    mode: 0640

- name: Write Service Overrides
  template:
    src: override.conf.j2
    dest: "{{ kafka_broker.systemd_override }}"
    mode: 0640
    owner: "{{kafka_broker_user}}"
    group: "{{kafka_broker_group}}"
  notify:
    - reload systemd
    - Restart Kafka

- name: Tune virtual memory settings
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    sysctl_file: "{{ kafka_broker_sysctl_file }}"
  with_dict: "{{ kafka_broker_sysctl }}"
  notify:
    - load sysctl

- name: Certs were Updated - Trigger Restart
  command: /bin/true
  notify: Restart Kafka
  when: certs_updated|bool

- meta: flush_handlers

- name: Start Kafka Broker Service
  systemd:
    name: "{{kafka_broker_service_name}}"
    enabled: true
    state: started

- name: Wait for Under Replicated Partitions on Broker
  include_tasks: ../../tasks/wait_for_urp.yml
  when:
    - health_checks_enabled|bool
    - jolokia_enabled|bool
    - not ansible_check_mode
