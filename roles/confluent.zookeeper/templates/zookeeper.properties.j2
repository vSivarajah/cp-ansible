# Maintained by Ansible
{% for key, value in zookeeper.properties.items() %}
{{key}}={{value}}
{% endfor %}
{% if zookeeper_ssl_enabled | bool %}
secureClientPort={{zookeeper_client_port}}
serverCnxnFactory=org.apache.zookeeper.server.NettyServerCnxnFactory
authProvider.x509=org.apache.zookeeper.server.auth.X509AuthenticationProvider
ssl.keyStore.location={{zookeeper_keystore_path}}
ssl.keyStore.password={{zookeeper_keystore_storepass}}
ssl.trustStore.location={{zookeeper_truststore_path}}
ssl.trustStore.password={{zookeeper_truststore_storepass}}
sslQuorum=true
ssl.quorum.keyStore.location={{zookeeper_keystore_path}}
ssl.quorum.keyStore.password={{zookeeper_keystore_storepass}}
ssl.quorum.trustStore.location={{zookeeper_truststore_path}}
ssl.quorum.trustStore.password={{zookeeper_truststore_storepass}}
{% if not zookeeper_ssl_mutual_auth_enabled| bool %}
ssl.clientAuth=none
{% else %}
ssl.clientAuth=need
{% endif %}
{% endif %}
{% if zookeeper_sasl_protocol in ['kerberos', 'digest'] %}
authProvider.sasl=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
{% if zookeeper_sasl_protocol == 'kerberos' %}
kerberos.removeHostFromPrincipal=true
kerberos.removeRealmFromPrincipal=true
{% endif %}
{% endif %}
{% for host in groups['zookeeper'] %}
server.{{ hostvars[host]['zookeeper_id'] | default(groups.zookeeper.index(host) + 1)}}={{ zookeeper_current_node_hostname if host == inventory_hostname else host }}:{{zookeeper_peer_port}}:{{zookeeper_leader_port}}
{% endfor %}
